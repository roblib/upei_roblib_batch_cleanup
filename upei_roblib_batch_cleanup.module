<?php

/**
 * @file
 * Implementation of Roblib batch cleanup.
 */

/**
 * Implements hook_cron
 */
function upei_roblib_batch_cleanup_cron() {
  module_load_include('inc', 'islandora_batch', 'includes/db');
  // get the sets that are 1 week or older so users get a chance to
  // see the results of their ingests before we delete the set.
  $sets = upei_roblib_batch_cleanup_get_sets(time() - 604800);
  $queue = DrupalQueue::get('upei_roblib_batch_cleanup');
  foreach ($sets as $set_id) {
    $queue->createItem($set_id);
  }
}

/**
 * Implements hook_cron_queue_info
 */
function upei_roblib_batch_cleanup_cron_queue_info() {
  $queues = array();
  $queues['upei_roblib_batch_cleanup'] = array(
    'worker callback' => 'upei_roblib_batch_cleanup_delete_set',
    'time' => 30,
  );
  return $queues;
}

/**
 * Callback for our queue.
 *
 * Removes a batch set identified by it's id if all the items are ingested.
 *
 * @param int $set_id
 *   The id of a set
 */
function upei_roblib_batch_cleanup_delete_set($set_id) {
  module_load_include('inc', 'islandora_batch', 'includes/db');
  // Check that all objects in set have been ingested.
  if (islandora_batch_check_if_set_is_fully_ingested($set_id)) {
    $num_objects = islandora_batch_delete_set($set_id);
    watchdog('upei_roblib_batch_cleanup', 'Successfully removed !num items for set !id',
      array('!num' => $num_objects, '!id' => $set_id));
  }
  else {
    watchdog('upei_roblib_batch_cleanup', 'Did not remove set !id, Not all the objects were ingested.',
      array('!id' => $set_id));
  }
}

/**
 * Implements hook_views_api().
 */
function upei_roblib_batch_cleanup_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'upei_roblib_batch_cleanup') . '/views',
  );
}

/**
 * Get batch sets stored in the database.  We want all sets based on a timestamp.
 *
 * Older sets created with older versions of the islandora_batch module may not
 * have been marked as completed so we just ask for all sets.
 *
 * @param int
 *   A timestamp:
 *   - An integer timestamp will return sets dependent on $op.
 * @param string $op
 *   Represents the operator to use in the comparison.
 *   Defaults to '<=', to select
 *   objects completed before (or on) a specific timestamp.
 *
 * @return array
 *   An array of batch set ids for batches that exist in the database.
 */
function upei_roblib_batch_cleanup_get_sets($timestamp, $op = '<=') {
  $query = db_select('islandora_batch_set', 's')
    ->fields('s', array('id'));
  $query->condition('created', $timestamp, $op);
  $sets = $query->execute();
  return $sets->fetchCol();
}







